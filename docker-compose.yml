version: '3.7'

services:

  apache:
    build:
      context: ./apache
      dockerfile: Dockerfile
    container_name: apache
    working_dir: /usr/local/apache2/htdocs
    volumes:
      - "./www:/usr/local/apache2/htdocs"
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    depends_on:
      - php
      - mysql
      - phpmyadmin
    external_links:
      - phpmyadmin
      - mysql

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php
    working_dir: /usr/local/apache2/htdocs
    restart: unless-stopped
    volumes:
      - "./www:/usr/local/apache2/htdocs"

  phpmyadmin:
    build:
      context: ./phpmyadmin
      dockerfile: Dockerfile
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
      - PMA_ABSOLUTE_URI=${PMA_ABSOLUTE_URI}
    restart: unless-stopped
    depends_on:
      - mysql

  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    container_name: ${MYSQL_HOST}
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - "./mysql/init/:/docker-entrypoint-initdb.d/"
    ports:
      - "3306:3306"

  # install modules for codeigniter
  composer-fantomviet:
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer-fantomviet
    user: ${CURRENT_UID}
    volumes:
      - "./www/fantomviet:/app"

  composer-vietnamhat:
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer-vietnamhat
    user: ${CURRENT_UID}
    volumes:
      - "./www/vietnamhat:/app"

  composer-79btc:
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer-79btc
    user: ${CURRENT_UID}
    volumes:
      - "./www/79btc:/app"
      
  # load dependencies for bots on deploy
  # path: www/bots/api/composer.json
  composer-bots:
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer-bots
    user: ${CURRENT_UID}
    volumes:
      - "./www/bots/api:/app"
